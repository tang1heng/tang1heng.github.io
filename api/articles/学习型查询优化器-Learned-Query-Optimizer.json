{"title":"学习型查询优化器 | Learned Query Optimizer","uid":"703ba5165cdd77e4c0044ba63885ca1f","slug":"学习型查询优化器-Learned-Query-Optimizer","date":"2022-10-29T09:47:04.000Z","updated":"2022-10-29T11:51:56.539Z","comments":true,"path":"api/articles/学习型查询优化器-Learned-Query-Optimizer.json","keywords":null,"cover":[],"content":"<h1 id=\"Learned-Query-Optimizer-学习型查询优化器\"><a href=\"#Learned-Query-Optimizer-学习型查询优化器\" class=\"headerlink\" title=\"Learned Query Optimizer | 学习型查询优化器\"></a>Learned Query Optimizer | 学习型查询优化器</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Learned Query Optimizer: At the Forefront of AI-Driven Databases(EDBT tutorial)</p></blockquote>\n<p><a href=\"https://www.youtube.com/watch?v=LDuLEXa3drM&ab_channel=EDBTAssociation\">视频</a></p>\n<p>论文：<a href=\"https://openproceedings.org/2022/conf/edbt/tutorial-1.pdf\">https://openproceedings.org/2022/conf/edbt/tutorial-1.pdf</a></p>\n<h2 id=\"一：数据库查询优化器（前置知识）\"><a href=\"#一：数据库查询优化器（前置知识）\" class=\"headerlink\" title=\"一：数据库查询优化器（前置知识）\"></a>一：数据库查询优化器（前置知识）</h2><p>查询优化器：对于输入查询生成最好的物理计划。</p>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027105548.png\" alt=\"查询优化器架构-火山框架\"></p>\n<ul>\n<li><p>输入：查询<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.79ex\" height=\"2.032ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 791 898\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g></g></g></svg></mjx-container>和数据<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.873ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 828 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path></g></g></g></svg></mjx-container>。</p>\n</li>\n<li><p>输出：计划<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g></g></g></svg></mjx-container>。</p>\n</li>\n<li><p>困难：在于不同的连接顺序、连接方法、扫描方式等。</p>\n</li>\n<li><p>Planner架构：火山Volcano框架。</p>\n<ul>\n<li>连接顺序选择：枚举所有可能的候选计划。</li>\n<li>基数估计：估计每条子查询的元祖数量。</li>\n<li>代价模型：估计每条子查询的运行时代价。</li>\n</ul>\n</li>\n<li><p>缺点：经验驱动，不够好。</p>\n</li>\n</ul>\n<h2 id=\"二：学习型查询优化器内部组件\"><a href=\"#二：学习型查询优化器内部组件\" class=\"headerlink\" title=\"二：学习型查询优化器内部组件\"></a>二：学习型查询优化器内部组件</h2><h3 id=\"2-1-学习型基数估计\"><a href=\"#2-1-学习型基数估计\" class=\"headerlink\" title=\"2.1 学习型基数估计\"></a>2.1 学习型基数估计</h3><h4 id=\"2-1-1-问题定义和传统方法\"><a href=\"#2-1-1-问题定义和传统方法\" class=\"headerlink\" title=\"2.1.1 问题定义和传统方法\"></a>2.1.1 问题定义和传统方法</h4><p>基数估计问题：在不实际执行查询下估计查询<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.79ex\" height=\"2.032ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 791 898\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g></g></g></svg></mjx-container>产生的结果大小<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.269ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2329 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(760,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1149,0)\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1940,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。</p>\n<p>基数估计是代价估计和连接顺序选择问题的基础。</p>\n<p>基数估计的相关性能指标：</p>\n<ul>\n<li><strong>准确度</strong>决定查询计划的质量。</li>\n<li><strong>推理速度（延迟）</strong>决定整体查询运行时间。</li>\n<li>模型大小、训练和更新的时间也很重要。</li>\n</ul>\n<p>传统基数估计方法：</p>\n<ul>\n<li>直方图：基于属性间独立性假设 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.663ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.362ex\" height=\"2.36ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 8558.1 1043.1\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1202,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1591,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2341,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3007.8,0)\"><path data-c=\"2248\" d=\"M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z\"></path></g><g data-mml-node=\"munder\" transform=\"translate(4063.6,0)\"><g data-mml-node=\"mo\"><path data-c=\"220F\" d=\"M158 656Q147 684 131 694Q110 707 69 710H55V750H888V710H874Q840 708 820 698T795 678T786 656V-155Q798 -206 874 -210H888V-250H570V-210H584Q618 -208 638 -197T663 -178T673 -155V710H270V277L271 -155Q283 -206 359 -210H373V-250H55V-210H69Q103 -208 123 -197T148 -178T158 -155V656Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(977,-285.4) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(5501.2,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6252.2,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6703.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7092.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8169.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container><ul>\n<li>特点：推理速度快、存储成本低、估计误差大</li>\n<li>变种：多维直方图、查询驱动的直方图</li>\n</ul>\n</li>\n<li>抽样：在一个更小的数据抽样集里执行查询<ul>\n<li>特点：在估计准确度和推理速度之间权衡</li>\n<li>变种：核密度估计</li>\n</ul>\n</li>\n<li>连接估计：基于连接均匀性假设<ul>\n<li>估计连接查询 <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.41ex\" height=\"2.032ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 5043.1 898\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1068.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2124.6,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3106.3,0)\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(4284.1,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g></g></g></svg></mjx-container> 为：<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"38.391ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 16969 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(760,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1149,0)\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1940,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2606.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3662.6,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4413.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(484,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(5445.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(5834.4,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(824,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(7206.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7817.4,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8539.6,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(9290.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(484,-150) scale(0.707)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(10361.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(10750.3,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(824,-150) scale(0.707)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(12161,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(12772.2,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(13494.4,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13772.4,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14754.2,0)\"><path data-c=\"22C8\" d=\"M833 50T833 250T832 450T659 351T487 250T658 150T832 50Q833 50 833 250ZM873 10Q866 -5 854 -5Q851 -5 845 -3L449 226L260 115Q51 -5 43 -5Q39 -5 35 -1T28 7L26 11V489Q33 505 43 505Q51 505 260 385L449 274L845 503Q851 505 853 505Q866 505 873 490V10ZM412 250L67 450Q66 450 66 250T67 50Q69 51 240 150T412 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(15932,0)\"><path data-c=\"1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(16691,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g></g></g></svg></mjx-container></li>\n<li>基于连接的抽样</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-2-学习型查询驱动方法\"><a href=\"#2-1-2-学习型查询驱动方法\" class=\"headerlink\" title=\"2.1.2 学习型查询驱动方法\"></a>2.1.2 学习型查询驱动方法</h4><p>学习型查询驱动方法：通过分析查询负载，学习一个回归模型用来映射从查询<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.79ex\" height=\"2.032ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -704 791 898\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g></g></g></svg></mjx-container>到基数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.269ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2329 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(760,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1149,0)\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1940,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。</p>\n<ul>\n<li>查询特征工程十分重要。</li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027110102.png\" alt=\"查询特征\"></li>\n<li>模型：XGboost、神经网络、树型LSTM、深度集成学习…<ul>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027112051.png\" alt=\"MSCN\"></li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027112135.png\" alt=\"E2E-Card&Cost\"></li>\n</ul>\n</li>\n<li>优点：推理速度快、多用途（连接范式、过滤类型…）</li>\n<li>缺点：估计准确度严重依赖于训练查询负载<ul>\n<li>要求大量用于训练的查询（无法用于新数据库上）</li>\n<li>如果数据或查询工作负载改变，性能会严重下降</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-3-学习型数据驱动方法\"><a href=\"#2-1-3-学习型数据驱动方法\" class=\"headerlink\" title=\"2.1.3 学习型数据驱动方法\"></a>2.1.3 学习型数据驱动方法</h4><p>学习型数据驱动方法：通过分析数据，然后学习表<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.593ex\" height=\"1.532ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 704 677\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g></svg></mjx-container>属性<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g></g></g></svg></mjx-container>上的概率分布函数<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.491ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3310.8 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(751,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(484,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1782.8,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2171.8,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2921.8,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>。</p>\n<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.764ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9177.8 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(760,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1149,0)\"><path data-c=\"1D444\" d=\"M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1940,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2606.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3662.6,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(4413.6,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(484,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(5445.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(5834.4,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6584.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7195.6,0)\"><path data-c=\"2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7917.8,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8195.8,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8899.8,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g></g></g></svg></mjx-container></li>\n<li>构建统计模型来捕获数据分布<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.491ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3310.8 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(751,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(484,-150) scale(0.707)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1782.8,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2171.8,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2921.8,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n</ul>\n<p>常见方法：</p>\n<ul>\n<li><strong>深度自回归模型（Neurocard）</strong>：分解联合数据分布为条件分布。<ul>\n<li>$Pr_T(A)=Pr_T(A_1)*Pr_T(A_2|A_1)<em>Pr_T(A_3|A_2,A_1)</em>…*Pr_T(A_n|A_{n-1},…,A_1)$</li>\n<li>估计准确度高、模型规模大、推理速度慢。</li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027111709.png\" alt=\"Naru\"></li>\n</ul>\n</li>\n<li>概率图模型：<ul>\n<li><strong>贝叶斯网络（BayesCard）</strong>：基于条件独立假设。<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.8ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.323ex\" height=\"2.497ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 11192.9 1103.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1202,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1591,0)\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(2341,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3007.8,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"munder\" transform=\"translate(4063.6,0)\"><g data-mml-node=\"mo\"><path data-c=\"220F\" d=\"M158 656Q147 684 131 694Q110 707 69 710H55V750H888V710H874Q840 708 820 698T795 678T786 656V-155Q798 -206 874 -210H888V-250H570V-210H584Q618 -208 638 -197T663 -178T673 -155V710H270V277L271 -155Q283 -206 359 -210H373V-250H55V-210H69Q103 -208 123 -197T148 -178T158 -155V656Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-285.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></g><g data-mml-node=\"mi\" transform=\"translate(5501.2,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6252.2,0)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6703.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(7092.2,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8169.1,0) translate(0 -0.5)\"><path data-c=\"7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path></g><g data-mml-node=\"msub\" transform=\"translate(8447.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(783,-176.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1032,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1421,0)\"><path data-c=\"1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(1766,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(10803.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container></li>\n<li>估计准确度高、模型规模小、推理速度快、训练速度慢。</li>\n</ul>\n</li>\n<li><strong>和积网络（DeepDB）</strong>：基于局部独立假设，在属性之间按行分裂来寻找局部独立性。<ul>\n<li>估计准确度、推理速度、模型大小都对属性相关性敏感。</li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027111624.png\" alt=\"DeepDB\"></li>\n</ul>\n</li>\n<li><strong>因式分解和积网络（FLAT</strong>）：结合了BN和SPN，自适应地处理高相关和弱相关的属性。<ul>\n<li>估计准确度高、模型规模小、推理速度慢（对于大量属性）。</li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027111804.png\" alt=\"FLAT\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>规范化流模型（FACE）</strong>：<ul>\n<li>估计准确度高、推理速度快、模型规模小（紧实）。</li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027111925.png\" alt=\"FACE\"></li>\n</ul>\n</li>\n<li>使用基于扇出（fanout）的方法来处理连接（join）查询：<ul>\n<li>表中的每条元祖在连接结果中可以出现多次。</li>\n<li>可以产生准确的估计。</li>\n</ul>\n</li>\n<li>基于界限的方法<ul>\n<li>代替去直接估计基数，而是提供一个上界（最坏的情况）。</li>\n<li>可以避免非常昂贵的连接顺序和物理算子。</li>\n<li>可以生成有效的查询计划但是具有不可承担的延迟。</li>\n<li>严格来说不算基数估计（无法从细节上解释）。</li>\n</ul>\n</li>\n<li>Benchmark<ul>\n<li>IMDB JOB-light<ul>\n<li>有复杂分布的真实世界数据集</li>\n<li>包含6张表，星型连接（join）模式</li>\n</ul>\n</li>\n<li>STATS-CEB</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-1-4-学习型混合方法\"><a href=\"#2-1-4-学习型混合方法\" class=\"headerlink\" title=\"2.1.4 学习型混合方法\"></a>2.1.4 学习型混合方法</h4><ul>\n<li>Learning to be a Statistician: Learned Estimator for Number of Distinct Values</li>\n<li>Flowloss：Flow-Loss: Learning Cardinality Estimates That Matter</li>\n<li>GLUE：</li>\n</ul>\n<h4 id=\"2-1-5-实验对比分析\"><a href=\"#2-1-5-实验对比分析\" class=\"headerlink\" title=\"2.1.5 实验对比分析\"></a>2.1.5 实验对比分析</h4><p>实验结果：</p>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027112237.png\" alt=\"Benchmark\"></p>\n<p>总结：</p>\n<ul>\n<li>传统方法是最通用的、轻量级、很快训练和更新、低延迟、很容易部署在数据库系统上。</li>\n<li>学习型数据驱动方法在估计准确度性能上SOTA，但是不够通用，有的模型过大并且推理速度过慢。</li>\n<li>学习型查询驱动方法在静态数据库实例上表现很好，但是无法用于新数据库，或者数据库在频繁更新或工作负载偏移的场景。</li>\n</ul>\n<h3 id=\"2-2-学习型代价估计\"><a href=\"#2-2-学习型代价估计\" class=\"headerlink\" title=\"2.2 学习型代价估计\"></a>2.2 学习型代价估计</h3><ul>\n<li>任务目标：给定一条SQL查询Q的物理执行计划P，基于查询Q的基数以及P的算子，去估计查询执行时间/资源消耗。</li>\n<li>相关性：代价估计依赖于基数。</li>\n<li>估计困难度：比基数估计更加苦难，因为需要考虑不同因素（比如顺序扫描成本、CPU使用率等等）。</li>\n<li>方法分类：<ul>\n<li>单条查询的代价估计：<ul>\n<li>特点：end2end，基于树型的计划编码。</li>\n<li>关键思想：使用之前的计划来训练一个树型的神经网络，用来直接预测代价。</li>\n</ul>\n</li>\n<li>多条查询（并发下）的代价估计：<ul>\n<li>特点：一条计划的性能可能由于计划之间的相关性而不同。</li>\n<li>关键思想：使用一个图来表征计划之间的相关性，然后使用一个神经网络来预测代价。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-2-1-经验驱动方法（基于规则）\"><a href=\"#2-2-1-经验驱动方法（基于规则）\" class=\"headerlink\" title=\"2.2.1 经验驱动方法（基于规则）\"></a>2.2.1 经验驱动方法（基于规则）</h4><h4 id=\"2-2-2-单条查询的代价估计\"><a href=\"#2-2-2-单条查询的代价估计\" class=\"headerlink\" title=\"2.2.2 单条查询的代价估计\"></a>2.2.2 单条查询的代价估计</h4><p>挑战：</p>\n<ul>\n<li>构建一个端到端的模型用于代价估计，防止基数估计误差造成的累计误差。</li>\n<li>学习模型应该捕获查询计划中的树型结构信息。</li>\n<li>难以对谓词进行编码。</li>\n</ul>\n<p>Tree-LSTM：</p>\n<ul>\n<li>表征层：学习每条子查询的嵌入。</li>\n<li>估计层：同时输出基数和代价。</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027200956.png\" alt=\"E2E-Cost\"></p>\n<h4 id=\"2-2-3-并发查询的代价估计\"><a href=\"#2-2-3-并发查询的代价估计\" class=\"headerlink\" title=\"2.2.3 并发查询的代价估计\"></a>2.2.3 并发查询的代价估计</h4><p>现有方法专注于预测单个查询的性能，但不能有效地预测并发查询的性能，因为<em>很难捕捉不同查询之间的相关性</em>，例如锁冲突和缓冲区共享。</p>\n<ul>\n<li>查询之间有复杂的联系</li>\n<li>数据配置的约束</li>\n</ul>\n<p>QPP：</p>\n<ul>\n<li>顶点建模：获取查询计划；从计划中抽取算子作为顶点特征。</li>\n<li>边建模：计算四种类型的边之间的关系<ul>\n<li>Parent-Child</li>\n<li>Data Sharing</li>\n<li>Data Conflict</li>\n<li>Resource</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027201734.png\"></p>\n<h3 id=\"2-3-学习型连接顺序搜索\"><a href=\"#2-3-学习型连接顺序搜索\" class=\"headerlink\" title=\"2.3 学习型连接顺序搜索\"></a>2.3 学习型连接顺序搜索</h3><p>连接顺序枚举：给定一条SQL查询，一个连接join排序被二叉树捕获，叶子节点表示一个基表关系。目标是选择最“便宜”的排序（根据代价模型）。</p>\n<h4 id=\"2-3-1-问题定义和现存方法\"><a href=\"#2-3-1-问题定义和现存方法\" class=\"headerlink\" title=\"2.3.1 问题定义和现存方法\"></a>2.3.1 问题定义和现存方法</h4><ul>\n<li>离线：<ul>\n<li>特征：基于工作负载，使用基于强化学习的方法。</li>\n<li>关键思想：使用现存的负载来训练一个学习型优化器，用来预测未来的负载的计划。</li>\n</ul>\n</li>\n<li>在线：<ul>\n<li>特征：不提供工作负载，但是依赖于定制数据库。</li>\n<li>关键思想：查询计划可以在执行中改变。一旦发现当前计划是糟糕的，就可以选择切换到另外一个计划。这种方法在数据库实际执行查询时才开始学习。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-3-2-离线学习方法\"><a href=\"#2-3-2-离线学习方法\" class=\"headerlink\" title=\"2.3.2 离线学习方法\"></a>2.3.2 离线学习方法</h4><p>背景：</p>\n<ul>\n<li>连接顺序的搜索空间巨大。</li>\n<li>传统优化器无法从之前的例子中学习。</li>\n</ul>\n<p>挑战：</p>\n<ul>\n<li>如何减少连接顺序的搜索空间？</li>\n<li>如何选择最好的连接顺序？</li>\n</ul>\n<p>ReJoin：</p>\n<ul>\n<li>强化学习模型<ul>\n<li>agent：optimizer</li>\n<li>action：join</li>\n<li>env：cost mode，database</li>\n<li>reward：cost，latency</li>\n<li>state：join order</li>\n</ul>\n</li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027215157.png\" alt=\"ReJOIN\"></li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027220457.png\" alt=\"查询表征\"></li>\n</ul>\n<p>RTOS：</p>\n<ul>\n<li>将TreeLSTM作为Q network</li>\n<li>两步骤训练：<ul>\n<li>代价预训练</li>\n<li>延迟微调</li>\n</ul>\n</li>\n<li>动态神经网络<ul>\n<li>通过DFS来为每条计划构建神经网络。</li>\n</ul>\n</li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027220702.png\" alt=\"RTOS\"></li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027221352.png\"></li>\n</ul>\n<h4 id=\"2-3-3-在线学习方法\"><a href=\"#2-3-3-在线学习方法\" class=\"headerlink\" title=\"2.3.3 在线学习方法\"></a>2.3.3 在线学习方法</h4><p>背景：</p>\n<ul>\n<li>真实数据库负载差异大。</li>\n<li>之前基于学习的优化器需要提供训练查询，很难针对不同负载给出好的计划。</li>\n</ul>\n<p>挑战：</p>\n<ul>\n<li>如何设计一个新的工作机制来允许优化器学习并切换到不同的连接顺序（在线）。</li>\n<li>如何评估并选择不同的连接顺序（在线）。</li>\n</ul>\n<h4 id=\"2-3-4-对比分析\"><a href=\"#2-3-4-对比分析\" class=\"headerlink\" title=\"2.3.4 对比分析\"></a>2.3.4 对比分析</h4><p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221027222500.png\" alt=\"对比\"></p>\n<h3 id=\"2-4-总结\"><a href=\"#2-4-总结\" class=\"headerlink\" title=\"2.4 总结\"></a>2.4 总结</h3><ul>\n<li><p>基数估计 CardEst</p>\n</li>\n<li><p>代价估计 CostEst</p>\n</li>\n<li><p>连接选择 JoinSel</p>\n</li>\n<li><p>它们可以一起工作来生成最佳的查询计划。</p>\n<ul>\n<li>比如，JoinSel 可以基于 CostEst 来选择一个好的顺序。</li>\n</ul>\n</li>\n<li><p>它们都可以通过机器学习技术来优化。</p>\n<ul>\n<li>CostEst 利用神经网络来编码查询并预测代价，CardEst 的方法也可以使用。</li>\n<li>JoinSel 依赖于基于强化学习的方法，因为连接顺序选择问题可以看成是一个做决定的过程，并且数据库可以提供反馈作为回报。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三：学习型查询优化器整体模块\"><a href=\"#三：学习型查询优化器整体模块\" class=\"headerlink\" title=\"三：学习型查询优化器整体模块\"></a>三：学习型查询优化器整体模块</h2><h3 id=\"3-1-端到端学习型QO：Neo\"><a href=\"#3-1-端到端学习型QO：Neo\" class=\"headerlink\" title=\"3.1 端到端学习型QO：Neo\"></a>3.1 端到端学习型QO：Neo</h3><ul>\n<li>从输入查询到可执行的计划。</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028143343.png\" alt=\"Neo\"></p>\n<ul>\n<li>SQL查询级别的编码：<ul>\n<li>连接信息</li>\n<li>谓词信息</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028144328.png\" alt=\"Query Encoding\"></p>\n<ul>\n<li>查询执行计划的编码：</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028144512.png\" alt=\"Plan Encoding\"></p>\n<ul>\n<li>价值网络：<ul>\n<li>网络架构：树卷积<ul>\n<li>基于归纳偏置：树形结构的查询计划</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028144715.png\" alt=\"Value Network\"></p>\n<ul>\n<li>树卷积操作<ul>\n<li>自动为不同的算子、表学习 filter 的权重</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028150848.png\" alt=\"tree convolution\"></p>\n<ul>\n<li>优点：<ul>\n<li>第一个自动的<strong>端到端</strong>地学习型查询优化器</li>\n</ul>\n</li>\n<li>缺点：<ul>\n<li>从零学习整个查询优化器的所有东西：长的训练时间和重的冷启动问题</li>\n<li>对每个数据库都需要特定的特征化：很难泛化到更新场景。</li>\n<li>代替而不是修改：无法重用现存的DBMS代码。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-2-学习引导QO：Bao\"><a href=\"#3-2-学习引导QO：Bao\" class=\"headerlink\" title=\"3.2 学习引导QO：Bao\"></a>3.2 学习引导QO：Bao</h3><p>背景：</p>\n<ul>\n<li>现存查询优化器有不同的hint set（提示集）：可以disable或enable特定类型的算子，比如禁止loop join等。</li>\n<li>对于每条查询，调整到一个好的hint set可以有助于生成一个好的计划。</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028152038.png\" alt=\"JOB Query\"></p>\n<ul>\n<li>学习在现存查询优化器上找到正确的hint set。</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028152215.png\" alt=\"Bao\"></p>\n<ul>\n<li>Bao的预测模型架构<ul>\n<li>和Neo一样基于树卷积</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028153146.png\" alt=\"Bao的预测网络\"></p>\n<p>评估结果：</p>\n<ul>\n<li>在长时间训练后Neo可以胜过Bao，因为Neo比Bao在计划选择上更自由（有更大的选择空间）。</li>\n<li>Bao更快更容易适应于动态负载环境。</li>\n</ul>\n<p>优点：</p>\n<ul>\n<li>引导而不是替代：重用现存查询优化器，更容易部署。</li>\n<li>容易适应数据、查询、系统更新：更好的泛化能力。</li>\n<li>更小的训练时间（相比于Neo）</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>计划选择空间受限：性能有时会损失。</li>\n<li>冷启动问题和回归问题仍然存在。</li>\n</ul>\n<p>学习型QO对比：</p>\n<ul>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028160520.png\" alt=\"Learned-QO对比\"></li>\n<li><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221028160723.png\" alt=\"训练时间和性能对比\"></li>\n</ul>\n<h3 id=\"3-3-统一、可迁移的模型：MTMLF\"><a href=\"#3-3-统一、可迁移的模型：MTMLF\" class=\"headerlink\" title=\"3.3 统一、可迁移的模型：MTMLF\"></a>3.3 统一、可迁移的模型：MTMLF</h3><p>基本思想：学习到的知识是可分解的。</p>\n<ul>\n<li>任务特定的知识：用来解决特定任务，比如连接顺序（排序）选择的规则。<ul>\n<li>用一个小模型去适应每个任务。</li>\n</ul>\n</li>\n<li>任务共享的知识：数据和查询表征（可以在所有任务中使用）。<ul>\n<li>学习查询语句的统一表征。</li>\n</ul>\n</li>\n<li>数据特定的知识：比如数据和查询负载分布。<ul>\n<li>适应每个数据库。</li>\n</ul>\n</li>\n<li>数据无关的元知识：跨数据库的常见规则，比如专家经验、多表连接规则。<ul>\n<li>在不同数据库间总结元数据。</li>\n</ul>\n</li>\n</ul>\n<p>微调预先训练号好的模型来适应用户数据：</p>\n<p>架构：</p>\n<ul>\n<li>更有效的训练，而不是对冗余知识的学习。</li>\n<li>更高效的任务建模，在有先验知识的指导下，比如从代价估计到基数估计。</li>\n<li>可转移能力，避免冷启动回归问题。</li>\n</ul>\n<p>工作流：</p>\n<ul>\n<li>预训练大模型提供基础工具。</li>\n<li>更深度的优化：能看到更多的数据。</li>\n<li>容易进化和管理。</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221029173154.png\" alt=\"MTMLF-Q\"></p>\n<p>实验评估结果：</p>\n<ul>\n<li>one mode for all 架构更准确<ul>\n<li>多任务学习 &gt; 单独学习</li>\n</ul>\n</li>\n<li>one mode for all 架构更有效<ul>\n<li>预训练+微调 范式可以迁移到新数据库上</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221029172956.png\"></p>\n<p><img src=\"https://images-1304805469.cos.ap-chengdu.myqcloud.com/img/20221029173317.png\"></p>\n<h3 id=\"3-4-比较和分析\"><a href=\"#3-4-比较和分析\" class=\"headerlink\" title=\"3.4 比较和分析\"></a>3.4 比较和分析</h3><ul>\n<li>Neo：从零学习整个查询优化器，端到端。<ul>\n<li>长的训练时间、低的泛化能力、严重的冷启动问题。</li>\n</ul>\n</li>\n<li>Bao：学习引导现存的查询优化器，通过调整提示集。<ul>\n<li>容易部署和更好的泛化能力。</li>\n<li>性能损失，仍然存在冷启动问题。</li>\n</ul>\n</li>\n<li>MTMLF：预训练+微调<ul>\n<li>一个可能的方向，对于学习型查询优化器来说。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"四：应用和部署\"><a href=\"#四：应用和部署\" class=\"headerlink\" title=\"四：应用和部署\"></a>四：应用和部署</h2><h3 id=\"4-1-学习型QO的应用案例研究\"><a href=\"#4-1-学习型QO的应用案例研究\" class=\"headerlink\" title=\"4.1 学习型QO的应用案例研究\"></a>4.1 学习型QO的应用案例研究</h3><h4 id=\"4-1-1-将学习型代价模型装配到微软SCOPE查询优化器\"><a href=\"#4-1-1-将学习型代价模型装配到微软SCOPE查询优化器\" class=\"headerlink\" title=\"4.1.1 将学习型代价模型装配到微软SCOPE查询优化器\"></a>4.1.1 将学习型代价模型装配到微软SCOPE查询优化器</h4><h4 id=\"4-1-2-学习引导微软SCOPE查询优化器\"><a href=\"#4-1-2-学习引导微软SCOPE查询优化器\" class=\"headerlink\" title=\"4.1.2 学习引导微软SCOPE查询优化器\"></a>4.1.2 学习引导微软SCOPE查询优化器</h4><h3 id=\"4-2-真实部署面临的挑战\"><a href=\"#4-2-真实部署面临的挑战\" class=\"headerlink\" title=\"4.2 真实部署面临的挑战\"></a>4.2 真实部署面临的挑战</h3><h3 id=\"4-3-Baihe\"><a href=\"#4-3-Baihe\" class=\"headerlink\" title=\"4.3 Baihe\"></a>4.3 Baihe</h3><h2 id=\"五：总结和未来工作\"><a href=\"#五：总结和未来工作\" class=\"headerlink\" title=\"五：总结和未来工作\"></a>五：总结和未来工作</h2><h3 id=\"5-1-总结\"><a href=\"#5-1-总结\" class=\"headerlink\" title=\"5.1 总结\"></a>5.1 总结</h3><ul>\n<li>学习查询优化器中的关键组件</li>\n<li>学习整个查询优化器</li>\n</ul>\n<h3 id=\"5-2-未来工作\"><a href=\"#5-2-未来工作\" class=\"headerlink\" title=\"5.2 未来工作\"></a>5.2 未来工作</h3><ul>\n<li>基数估计<ul>\n<li>融合数据驱动和查询驱动方法</li>\n<li>适应性方法：AP和TP场景、不同的数据和查询工作负载</li>\n<li>性能提升：<ul>\n<li>更新速度</li>\n<li>多表查询上的准确度</li>\n<li>意识到不同子查询</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>代价模型和连接选择<ul>\n<li>自动生成足够的训练数据（覆盖范围大）</li>\n<li>鲁棒模型，针对动态负载或不同场景</li>\n<li>给定一个负载和数据集，智能AI算法选择</li>\n</ul>\n</li>\n<li>学习型QO<ul>\n<li>预训练+微调</li>\n<li>新架构用来引导现存QO</li>\n<li>新的训练、更新策略</li>\n</ul>\n</li>\n<li>应用和部署<ul>\n<li>通用的部署工具</li>\n<li>定制化调整</li>\n</ul>\n</li>\n<li>除了QO：延伸到其他AI4DB任务<ul>\n<li>indexing</li>\n<li>advisor</li>\n<li>diagnosis</li>\n</ul>\n</li>\n</ul>\n","text":"Learned Query Optimizer | 学习型查询优化器 Learned Query Optimizer: At the Forefront of AI-Driven Databases(EDBT tutorial) 视频 论文：https://openproceed...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"查询优化","slug":"查询优化","count":1,"path":"api/tags/查询优化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Learned-Query-Optimizer-%E5%AD%A6%E4%B9%A0%E5%9E%8B%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8\"><span class=\"toc-text\">Learned Query Optimizer | 学习型查询优化器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8%EF%BC%88%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86%EF%BC%89\"><span class=\"toc-text\">一：数据库查询优化器（前置知识）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%EF%BC%9A%E5%AD%A6%E4%B9%A0%E5%9E%8B%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8%E5%86%85%E9%83%A8%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">二：学习型查询优化器内部组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%AD%A6%E4%B9%A0%E5%9E%8B%E5%9F%BA%E6%95%B0%E4%BC%B0%E8%AE%A1\"><span class=\"toc-text\">2.1 学习型基数估计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-1-%E9%97%AE%E9%A2%98%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BC%A0%E7%BB%9F%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.1.1 问题定义和传统方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-2-%E5%AD%A6%E4%B9%A0%E5%9E%8B%E6%9F%A5%E8%AF%A2%E9%A9%B1%E5%8A%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.1.2 学习型查询驱动方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-3-%E5%AD%A6%E4%B9%A0%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.1.3 学习型数据驱动方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-4-%E5%AD%A6%E4%B9%A0%E5%9E%8B%E6%B7%B7%E5%90%88%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.1.4 学习型混合方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-5-%E5%AE%9E%E9%AA%8C%E5%AF%B9%E6%AF%94%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2.1.5 实验对比分析</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%AD%A6%E4%B9%A0%E5%9E%8B%E4%BB%A3%E4%BB%B7%E4%BC%B0%E8%AE%A1\"><span class=\"toc-text\">2.2 学习型代价估计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-1-%E7%BB%8F%E9%AA%8C%E9%A9%B1%E5%8A%A8%E6%96%B9%E6%B3%95%EF%BC%88%E5%9F%BA%E4%BA%8E%E8%A7%84%E5%88%99%EF%BC%89\"><span class=\"toc-text\">2.2.1 经验驱动方法（基于规则）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-2-%E5%8D%95%E6%9D%A1%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%BB%A3%E4%BB%B7%E4%BC%B0%E8%AE%A1\"><span class=\"toc-text\">2.2.2 单条查询的代价估计</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-3-%E5%B9%B6%E5%8F%91%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%BB%A3%E4%BB%B7%E4%BC%B0%E8%AE%A1\"><span class=\"toc-text\">2.2.3 并发查询的代价估计</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%AD%A6%E4%B9%A0%E5%9E%8B%E8%BF%9E%E6%8E%A5%E9%A1%BA%E5%BA%8F%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">2.3 学习型连接顺序搜索</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-1-%E9%97%AE%E9%A2%98%E5%AE%9A%E4%B9%89%E5%92%8C%E7%8E%B0%E5%AD%98%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.3.1 问题定义和现存方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-2-%E7%A6%BB%E7%BA%BF%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.3.2 离线学习方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-3-%E5%9C%A8%E7%BA%BF%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.3.3 在线学习方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-4-%E5%AF%B9%E6%AF%94%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2.3.4 对比分析</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">2.4 总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%EF%BC%9A%E5%AD%A6%E4%B9%A0%E5%9E%8B%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8%E6%95%B4%E4%BD%93%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">三：学习型查询优化器整体模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%AD%A6%E4%B9%A0%E5%9E%8BQO%EF%BC%9ANeo\"><span class=\"toc-text\">3.1 端到端学习型QO：Neo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%AD%A6%E4%B9%A0%E5%BC%95%E5%AF%BCQO%EF%BC%9ABao\"><span class=\"toc-text\">3.2 学习引导QO：Bao</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E7%BB%9F%E4%B8%80%E3%80%81%E5%8F%AF%E8%BF%81%E7%A7%BB%E7%9A%84%E6%A8%A1%E5%9E%8B%EF%BC%9AMTMLF\"><span class=\"toc-text\">3.3 统一、可迁移的模型：MTMLF</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E6%AF%94%E8%BE%83%E5%92%8C%E5%88%86%E6%9E%90\"><span class=\"toc-text\">3.4 比较和分析</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%EF%BC%9A%E5%BA%94%E7%94%A8%E5%92%8C%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">四：应用和部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E5%AD%A6%E4%B9%A0%E5%9E%8BQO%E7%9A%84%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%E7%A0%94%E7%A9%B6\"><span class=\"toc-text\">4.1 学习型QO的应用案例研究</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-1-%E5%B0%86%E5%AD%A6%E4%B9%A0%E5%9E%8B%E4%BB%A3%E4%BB%B7%E6%A8%A1%E5%9E%8B%E8%A3%85%E9%85%8D%E5%88%B0%E5%BE%AE%E8%BD%AFSCOPE%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8\"><span class=\"toc-text\">4.1.1 将学习型代价模型装配到微软SCOPE查询优化器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-2-%E5%AD%A6%E4%B9%A0%E5%BC%95%E5%AF%BC%E5%BE%AE%E8%BD%AFSCOPE%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8\"><span class=\"toc-text\">4.1.2 学习引导微软SCOPE查询优化器</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E7%9C%9F%E5%AE%9E%E9%83%A8%E7%BD%B2%E9%9D%A2%E4%B8%B4%E7%9A%84%E6%8C%91%E6%88%98\"><span class=\"toc-text\">4.2 真实部署面临的挑战</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-Baihe\"><span class=\"toc-text\">4.3 Baihe</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%EF%BC%9A%E6%80%BB%E7%BB%93%E5%92%8C%E6%9C%AA%E6%9D%A5%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">五：总结和未来工作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">5.1 总结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E6%9C%AA%E6%9D%A5%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">5.2 未来工作</span></a></li></ol></li></ol></li></ol>","author":{"name":"Tomison","slug":"blog-author","avatar":"https://image.doubilm.com/images/2022-07-26/1658841958985.gif","link":"/","description":"一个热爱健身和穿搭的技术人。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{}}